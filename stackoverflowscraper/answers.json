[{"answer":{"answerer":"andrybakdirvine","content":"\nHit the Esc key to enter \"Normal mode\". Then you can type : to enter \"Command-line mode\". A colon (:) will appear at the bottom of the screen and you can type in one of the following commands. To execute a command, press the Enter key.\n\n\n:q  to quit (short for :quit)\n:q! to quit without saving (short for :quit!)\n:wq to write and quit\n:wq! to write and quit even if file has only read permission (if file does not have write permission: force write)\n:x  to write and quit (similar to :wq, but only write if there are changes)\n:exit to write and exit (same as :x)\n:qa to quit all (short for :quitall)\n:cq to quit without saving and make Vim return non-zero error (i.e. exit with error)\n\n\nYou can also exit Vim directly from \"Normal mode\" by typing ZZ to save and quit (same as :x) or ZQ to just quit (same as :q!). (Note that case is important here. ZZ and zz do not mean the same thing.)\n\nVim has extensive help - that you can access with the :help command - where you can find answers to all your questions and a tutorial for beginners.\n    "}},{"answer":{"answerer":"Ingo Karkat","content":"\nWith -y (easy mode), Vim defaults to insert mode, and you cannot permanently exit to normal mode via <Esc>. However, like in default Vim, you can issue a single normal mode command via <C-O>. So to exit, type <C-O>:q!<CR>.\n\nAlternatively, there's a special <C-L> mapping for easy mode that returns to normal mode.\n    "}},{"answer":{"answerer":"bk2204","content":"\nBy default, Vim (and at least some other implementations of vi, such as nvi), return 0 if a \"normal\" error occurs, such as an invalid command or another normal user input error.  It is the behavior of ed to exit nonzero in such a case, and as you've found, that behavior is generally undesirable because humans are imperfect and make many mistakes, which is why Vim doesn't do that.\nVim should exit nonzero if you use :cq, which has this behavior intentionally, as well as if certain error conditions are met (e.g., you run vim -y but the display cannot be started.\nIt is possible you have a configuration setting or plugin that causes this behavior.  You can try running with vim -u NONE -U NONE to verify this, and then isolate the problem by commenting out portions of your .vimrc.  It is also possible that your Vim distributor thought this would be a desirable feature to add and patched it in for you, but you haven't mentioned your OS or source of Vim packages, so it's hard to say.\nTo always force a zero exit, you can try :cq 0, but that is no more likely to work than a standard :q, since they both call the exact same function (getout) with the exact same value (0).\n    "}}]